name: Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  pull-requests: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/m3-memory-server

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    name: Build server image
    runs-on: ubuntu-latest
    outputs:
      primary_tag: ${{ steps.pick.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR (only on main)
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest,enable=${{ github.event_name == 'push' }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build (no push for PRs)
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: server/Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build & Push (main)
        if: github.event_name == 'push'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: server/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Pick primary tag
        id: pick
        shell: bash
        run: |
          echo '${{ steps.meta.outputs.tags }}' | tr ' ' '\n' | head -n1 | awk '{print "tag="$0}' >> "$GITHUB_OUTPUT"

  pr-comment:
    name: Comment image tag on PR
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Comment with run instructions
        uses: actions/github-script@v7
        env:
          IMAGE: ${{ needs.build.outputs.primary_tag || format('{0}:sha-{1}', env.IMAGE_NAME, github.sha) }}
        with:
          script: |
            const tag = process.env.IMAGE;
            const lines = [
              '**Build preview** âœ…',
              '',
              `Docker image (not pushed on PRs): ${tag}`,
              '',
              'To test locally after checkout:',
              '',
              '```bash',
              '# Build',
              `docker build -t ${tag} -f server/Dockerfile .`,
              '',
              '# Run (example)',
              'docker run --rm -p 3033:3033 \\',
              '  -e M3_BIND=0.0.0.0:3033 \\',
              '  -e M3_WEBHOOK_URL=$M3_WEBHOOK_URL \\',
              '  -e M3_WEBHOOK_SECRET=$M3_WEBHOOK_SECRET \\',
              `  ${tag}`,
              '```'
            ];
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: lines.join('\n')
            });
